import matplotlib
matplotlib.use('ps')
from matplotlib import rcParams
rcParams.update({'figure.autolayout': True})

from yt.mods import *
import numpy as na
import pylab as pl
#from string import rstrip
#import fields
import fields_bfield
from tracer_def import *

my_rho = YTQuantity(1, 'g / cm**3')
MRH = 0.76
pf_pc = 3e-18


###########################################################################
'''
#n>5e7 

time_arr = [8320.886727, 8829.893631, 9144.729877, 9223.030973, 9300.873914, 9383.439185, 9459.595641, 9527.625921, 9582.908565, 9647.228698, 9753.807721, 9867.158394, 9977.037577, 10034.72729, 10094.9781, 10149.24303, 10194.75875, 10256.14206, 10313.83119, 10366.41776, 10432.17241, 10489.8243, 10538.38625, 10598.36916, 10659.73533, 10710.91157, 10769.34427, 10828.06572, 10879.88778, 10937.46785, 10995.04792]

ub_arr = [3344132094, 4318168631, 9131659385, 10542341385, 11984404940, 13521170391, 15163850319, 16823810546, 18646436927, 20392038344, 22720873926, 25458715629, 27793071011, 28734401276, 29859921542, 30646908876, 31497957952, 32090849563, 33038882976, 33873278665, 34508152579, 35937166967, 36416100861, 37885377299, 38227863207, 39462669163, 40857661703, 41805564129, 42257449216, 42720981153, 44006342270]

uk_arr = [22889376734, 29532499590, 38226583907, 41405496887, 44367881542, 47567509226, 50044910020, 52415963248, 53334220711, 54511925451, 56908469728, 56188448626, 55189018763, 55076576720, 55348329520, 55964016066, 54905857214, 55177305145, 56377057092, 56878888588, 56830130211, 56548973814, 56672584653, 57706391988, 58654631029, 58233669168, 57861375853, 58767791270, 57946383157, 57701850788, 57025925501]

ut_arr = [1.41765E+11, 1.44427E+11, 1.46983E+11, 1.44267E+11, 1.43543E+11, 1.42655E+11, 1.41785E+11, 1.40891E+11, 1.40114E+11, 1.39207E+11, 1.38261E+11, 1.37291E+11, 1.36793E+11, 1.36705E+11, 1.36364E+11, 1.36312E+11, 1.35973E+11, 1.35565E+11, 1.35466E+11, 1.35165E+11, 1.34516E+11, 1.33936E+11, 1.33758E+11, 1.33335E+11, 1.32934E+11, 1.32605E+11, 1.32302E+11, 1.32002E+11, 1.32002E+11, 1.31702E+11, 1.31402E+11]
'''

#n > 1e10

xxx = 1e10

time_arr = [8320.886727, 8829.893631, 9045.78313158606, 9144.729877, 9223.030973, 9300.873914, 9383.439185, 9459.595641, 9527.625921, 9582.908565, 9647.228698, 9705.088454, 9753.807721, 9809.222173, 9867.158394, 9919.457507, 9977.037577, 10034.72729, 10094.9781, 10149.24303, 10194.75875, 10256.14206, 10313.83119, 10366.41776, 10432.17241, 10489.8243, 10538.38625, 10598.36916, 10659.73533, 10710.91157, 10769.34427, 10828.06572, 10879.88778, 10937.46785, 10995.04792] 

ub_arr = [1965667640, 5861666385, 13825092433.4647, 40300941716, 47316128788, 52412156480, 55028108117, 56950036367, 60122618602, 65998918428, 70141726213, 71557843287, 72123231968, 75509145846, 76436696007, 75742221524, 79632279806, 80480321771, 81480321771, 82756669800, 84643300281, 84357265374, 85828125165, 87293850462, 86918736673, 88918736673, 90652928786, 95088999108, 95035633671, 98760217405, 1.03057E+11, 1.04862E+11, 1.04533E+11, 1.04661E+11, 1.08762E+11] 

uk_arr = [18506828687, 31068963184, 47724791808.8129, 63131194382, 75615097193, 84814984776, 93911636700, 99547705650, 1.05854E+11, 1.0435E+11, 1.03814E+11, 1.06379E+11, 1.07705E+11, 1.0208E+11, 96882223606, 94233233083, 88032108038, 85605920105, 85304006643.5756, 86690037209, 80044804117, 79299328769, 82842600808, 83295829274, 80773344245, 79773344245, 77764306372, 81200280479, 84195021258, 81670641761, 80019336712, 83761393929, 80441422918, 80016655235, 77844482249]

ut_arr = [1.4302E+11, 1.44382E+11, 131639707097.51, 1.57243E+11, 1.31717E+11, 1.25413E+11, 1.19139E+11, 1.13306E+11, 1.07548E+11, 1.02545E+11, 97341398689, 94792260968, 91900772836, 88912570086, 87039682132, 84826800632, 84238668735, 83078895444, 81202715210.447, 80131007176, 77756683778, 76545539708, 76122005176, 74948230413, 73011626364, 71511626364, 70941469304, 69452908376, 68096214237, 67127282181, 66835586186, 65894967358, 65778104598, 65405847259, 64772801593]

time_arr = np.asarray(time_arr) - time_arr[2] 
ub_arr = np.asarray(ub_arr)
uk_arr = np.asarray(uk_arr)
ut_arr = np.asarray(ut_arr)

bmin = 1.e9
bmax = 2.e11
tmin = min(time_arr) - (min(time_arr) % 100) 
tmax = max(time_arr) + (100 - max(time_arr) % 100)

fsize = 14
#pl.subplot(121)
#pl.tight_layout()
#pl.plot(time_arr, bmag_arr,'k')
pl.plot(time_arr, ub_arr,'k', linewidth=2.0, label='magnetic specific energy')
pl.plot(time_arr, uk_arr,'c--', linewidth=2.0, label='turbulent specific energy')
pl.plot(time_arr, ut_arr,'g:', linewidth=2.0, label='thermal specific energy')
ax = pl.gca()
#ax.set_xscale('log')
ax.set_yscale('log')
ax.set_xlabel('time [yr]', fontsize=fsize)
ax.set_ylabel('specific energy [erg g$^{-1}$]', fontsize=fsize)
pl.title(r'n$_{\rm H}$ > 10$^{10}$ cm$^{-3}$')
pl.xticks(fontsize=fsize)
#ax.xaxis.set_ticklabels([])
pl.legend(loc=4, fontsize=10)
pl.yticks(fontsize=fsize)
pl.axis((tmin, tmax, bmin, bmax))

pl.savefig('bfield_vs_t.eps')

